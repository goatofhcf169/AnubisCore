plugins {
    id 'java'
    id 'com.gradleup.shadow' version '8.3.0'
    id("io.freefair.lombok") version "8.13.1"
}

group = 'com.candyrealms'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "CodeMC"
        url = uri("https://repo.codemc.io/repository/maven-public/")
    }
    maven {
        name "essentialsx-releases"
        url "https://repo.essentialsx.net/releases/"
    }
    maven { url = "https://repo.aikar.co/content/groups/aikar/" }
    maven { url = 'https://repo.extendedclip.com/releases/' }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.8.8-R0.1-SNAPSHOT"
    compileOnly fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly 'me.clip:placeholderapi:2.11.6'
    compileOnly 'net.essentialsx:EssentialsX:2.19.0'
    implementation "co.aikar:acf-paper:0.5.1-SNAPSHOT"
    implementation "dev.triumphteam:triumph-gui:3.1.11"
    implementation("de.tr7zw:item-nbt-api:2.14.1")
}

shadowJar {
    relocate 'co.aikar.commands', 'com.candyrealms.candycore.utils.acf'
    relocate 'co.aikar.locales', 'com.candyrealms.candycore.utils.locales'
    relocate("dev.triumphteam.gui", "com.candyrealms.candycore.utils.gui")
    relocate("de.tr7zw.changeme.nbtapi", "com.candyrealms.candycore.utils.nbtapi")
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
